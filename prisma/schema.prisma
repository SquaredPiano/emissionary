// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  firstName String?
  lastName  String?
  avatar    String?
  bio       String?
  location  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  receipts     Receipt[]
  emissionsLogs EmissionsLog[]

  @@map("users")
}

model Receipt {
  id          String   @id @default(cuid())
  userId      String
  imageUrl    String?
  merchant    String
  total       Decimal  @db.Decimal(10, 2)
  date        DateTime
  currency    String   @default("USD")
  taxAmount   Decimal? @db.Decimal(10, 2) @default(0)
  tipAmount   Decimal? @db.Decimal(10, 2) @default(0)
  paymentMethod String?
  receiptNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  receiptItems ReceiptItem[]
  emissionsLog EmissionsLog?

  @@map("receipts")
}

model ReceiptItem {
  id          String   @id @default(cuid())
  receiptId   String
  name        String
  quantity    Decimal  @db.Decimal(10, 3)
  unitPrice   Decimal  @db.Decimal(10, 2)
  totalPrice  Decimal  @db.Decimal(10, 2)
  category    String?
  brand       String?
  barcode     String?
  description String?
  carbonEmissions Decimal? @db.Decimal(10, 4) // kg CO2e
  confidence  Decimal? @db.Decimal(3, 2) // OCR confidence 0-1
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  receipt Receipt @relation(fields: [receiptId], references: [id], onDelete: Cascade)

  @@map("receipt_items")
}

model EmissionsLog {
  id         String   @id @default(cuid())
  receiptId  String   @unique
  userId     String
  totalCO2   Decimal  @db.Decimal(10, 4) // kg CO2e
  breakdown  Json     // Store emission breakdown by category
  calculationMethod String? // Method used for calculation
  carbonIntensity   Decimal? @db.Decimal(10, 4) // Carbon intensity factor used
  llmEnhanced Boolean @default(false) // Whether LLM was used for enhancement
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  receipt Receipt @relation(fields: [receiptId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("emissions_logs")
}