// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique
  email     String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  receipts Receipt[]
  emissions Emissions[]

  @@map("users")
}

model Receipt {
  id          String   @id @default(cuid())
  userId      String
  imageUrl    String?
  merchant    String
  total       Decimal
  date        DateTime
  items       Json?    // Store receipt items as JSON
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  emission Emissions?

  @@map("receipts")
}

model Emissions {
  id         String   @id @default(cuid())
  receiptId  String   @unique
  userId     String
  totalCO2   Decimal
  breakdown  Json     // Store emission breakdown by category
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  receipt Receipt @relation(fields: [receiptId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("emissions")
}